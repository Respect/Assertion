<?php

/*
 * This file is part of Respect/Assertion.
 *
 * (c) Henrique Moody <henriquemoody@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE file
 * that was distributed with this source code.
 */

declare(strict_types=1);

namespace Respect\Assertion;

use finfo;
use Throwable;

use function array_unshift;

/**
 * phpcs:disable Generic.Files.LineLength
 * @method ChainAssert all($compareTo, Throwable|string $description = null)
 * @method ChainAssert allAlnum(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allAlpha(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allArrayType(Throwable|string $description = null)
 * @method ChainAssert allArrayVal(Throwable|string $description = null)
 * @method ChainAssert allBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert allBase64(Throwable|string $description = null)
 * @method ChainAssert allBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert allBic(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert allBoolType(Throwable|string $description = null)
 * @method ChainAssert allBoolVal(Throwable|string $description = null)
 * @method ChainAssert allBsn(Throwable|string $description = null)
 * @method ChainAssert allCallableType(Throwable|string $description = null)
 * @method ChainAssert allCallback(callable $callback, Throwable|string $description = null)
 * @method ChainAssert allCharset(string ...$charset, Throwable|string $description = null)
 * @method ChainAssert allCnh(Throwable|string $description = null)
 * @method ChainAssert allCnpj(Throwable|string $description = null)
 * @method ChainAssert allConsonant(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allContains($containsValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert allContainsAny(array $needles, bool $strictCompareArray = false, Throwable|string $description = null)
 * @method ChainAssert allControl(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allCountable(Throwable|string $description = null)
 * @method ChainAssert allCountryCode(string $set = null, Throwable|string $description = null)
 * @method ChainAssert allCpf(Throwable|string $description = null)
 * @method ChainAssert allCreditCard(string $brand = null, Throwable|string $description = null)
 * @method ChainAssert allCurrencyCode(Throwable|string $description = null)
 * @method ChainAssert allDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert allDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert allDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allDirectory(Throwable|string $description = null)
 * @method ChainAssert allDomain(bool $tldCheck = true, Throwable|string $description = null)
 * @method ChainAssert allEmail(Throwable|string $description = null)
 * @method ChainAssert allEndsWith($endValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert allEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert allEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert allEven(Throwable|string $description = null)
 * @method ChainAssert allExecutable(Throwable|string $description = null)
 * @method ChainAssert allExists(Throwable|string $description = null)
 * @method ChainAssert allExtension(string $extension, Throwable|string $description = null)
 * @method ChainAssert allFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert allFalseVal(Throwable|string $description = null)
 * @method ChainAssert allFibonacci(Throwable|string $description = null)
 * @method ChainAssert allFile(Throwable|string $description = null)
 * @method ChainAssert allFilterVar(int $filter, $options = null, Throwable|string $description = null)
 * @method ChainAssert allFinite(Throwable|string $description = null)
 * @method ChainAssert allFloatType(Throwable|string $description = null)
 * @method ChainAssert allFloatVal(Throwable|string $description = null)
 * @method ChainAssert allGraph(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert allHexRgbColor(Throwable|string $description = null)
 * @method ChainAssert allIban(Throwable|string $description = null)
 * @method ChainAssert allIdentical($value, Throwable|string $description = null)
 * @method ChainAssert allImage(finfo $fileInfo = null, Throwable|string $description = null)
 * @method ChainAssert allImei(Throwable|string $description = null)
 * @method ChainAssert allIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert allInfinite(Throwable|string $description = null)
 * @method ChainAssert allInstance(string $instanceName, Throwable|string $description = null)
 * @method ChainAssert allIntType(Throwable|string $description = null)
 * @method ChainAssert allIntVal(Throwable|string $description = null)
 * @method ChainAssert allIp(string $range = '*', int $options = null, Throwable|string $description = null)
 * @method ChainAssert allIsbn(Throwable|string $description = null)
 * @method ChainAssert allIterableType(Throwable|string $description = null)
 * @method ChainAssert allJson(Throwable|string $description = null)
 * @method ChainAssert allLanguageCode(string $set = null, Throwable|string $description = null)
 * @method ChainAssert allLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert allLeapYear(Throwable|string $description = null)
 * @method ChainAssert allLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert allLowercase(Throwable|string $description = null)
 * @method ChainAssert allLuhn(Throwable|string $description = null)
 * @method ChainAssert allMacAddress(Throwable|string $description = null)
 * @method ChainAssert allMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert allMimetype(string $mimetype, Throwable|string $description = null)
 * @method ChainAssert allMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert allMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert allNegative(Throwable|string $description = null)
 * @method ChainAssert allNfeAccessKey(Throwable|string $description = null)
 * @method ChainAssert allNif(Throwable|string $description = null)
 * @method ChainAssert allNip(Throwable|string $description = null)
 * @method ChainAssert allNo($useLocale = false, Throwable|string $description = null)
 * @method ChainAssert allNoWhitespace(Throwable|string $description = null)
 * @method ChainAssert allNot($compareTo, Throwable|string $description = null)
 * @method ChainAssert allNotAlnum(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotAlpha(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotArrayType(Throwable|string $description = null)
 * @method ChainAssert allNotArrayVal(Throwable|string $description = null)
 * @method ChainAssert allNotBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert allNotBase64(Throwable|string $description = null)
 * @method ChainAssert allNotBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert allNotBic(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert allNotBlank(Throwable|string $description = null)
 * @method ChainAssert allNotBoolType(Throwable|string $description = null)
 * @method ChainAssert allNotBoolVal(Throwable|string $description = null)
 * @method ChainAssert allNotBsn(Throwable|string $description = null)
 * @method ChainAssert allNotCallableType(Throwable|string $description = null)
 * @method ChainAssert allNotCallback(callable $callback, Throwable|string $description = null)
 * @method ChainAssert allNotCharset(string ...$charset, Throwable|string $description = null)
 * @method ChainAssert allNotCnh(Throwable|string $description = null)
 * @method ChainAssert allNotCnpj(Throwable|string $description = null)
 * @method ChainAssert allNotConsonant(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotContains($containsValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert allNotContainsAny(array $needles, bool $strictCompareArray = false, Throwable|string $description = null)
 * @method ChainAssert allNotControl(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotCountable(Throwable|string $description = null)
 * @method ChainAssert allNotCountryCode(string $set = null, Throwable|string $description = null)
 * @method ChainAssert allNotCpf(Throwable|string $description = null)
 * @method ChainAssert allNotCreditCard(string $brand = null, Throwable|string $description = null)
 * @method ChainAssert allNotCurrencyCode(Throwable|string $description = null)
 * @method ChainAssert allNotDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert allNotDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert allNotDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotDirectory(Throwable|string $description = null)
 * @method ChainAssert allNotDomain(bool $tldCheck = true, Throwable|string $description = null)
 * @method ChainAssert allNotEmail(Throwable|string $description = null)
 * @method ChainAssert allNotEmoji(Throwable|string $description = null)
 * @method ChainAssert allNotEmpty(Throwable|string $description = null)
 * @method ChainAssert allNotEndsWith($endValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert allNotEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert allNotEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert allNotEven(Throwable|string $description = null)
 * @method ChainAssert allNotExecutable(Throwable|string $description = null)
 * @method ChainAssert allNotExists(Throwable|string $description = null)
 * @method ChainAssert allNotExtension(string $extension, Throwable|string $description = null)
 * @method ChainAssert allNotFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert allNotFalseVal(Throwable|string $description = null)
 * @method ChainAssert allNotFibonacci(Throwable|string $description = null)
 * @method ChainAssert allNotFile(Throwable|string $description = null)
 * @method ChainAssert allNotFilterVar(int $filter, $options = null, Throwable|string $description = null)
 * @method ChainAssert allNotFinite(Throwable|string $description = null)
 * @method ChainAssert allNotFloatType(Throwable|string $description = null)
 * @method ChainAssert allNotFloatVal(Throwable|string $description = null)
 * @method ChainAssert allNotGraph(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert allNotHexRgbColor(Throwable|string $description = null)
 * @method ChainAssert allNotIban(Throwable|string $description = null)
 * @method ChainAssert allNotIdentical($value, Throwable|string $description = null)
 * @method ChainAssert allNotImage(finfo $fileInfo = null, Throwable|string $description = null)
 * @method ChainAssert allNotImei(Throwable|string $description = null)
 * @method ChainAssert allNotIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert allNotInfinite(Throwable|string $description = null)
 * @method ChainAssert allNotInstance(string $instanceName, Throwable|string $description = null)
 * @method ChainAssert allNotIntType(Throwable|string $description = null)
 * @method ChainAssert allNotIntVal(Throwable|string $description = null)
 * @method ChainAssert allNotIp(string $range = '*', int $options = null, Throwable|string $description = null)
 * @method ChainAssert allNotIsbn(Throwable|string $description = null)
 * @method ChainAssert allNotIterableType(Throwable|string $description = null)
 * @method ChainAssert allNotJson(Throwable|string $description = null)
 * @method ChainAssert allNotLanguageCode(string $set = null, Throwable|string $description = null)
 * @method ChainAssert allNotLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert allNotLeapYear(Throwable|string $description = null)
 * @method ChainAssert allNotLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert allNotLowercase(Throwable|string $description = null)
 * @method ChainAssert allNotLuhn(Throwable|string $description = null)
 * @method ChainAssert allNotMacAddress(Throwable|string $description = null)
 * @method ChainAssert allNotMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert allNotMimetype(string $mimetype, Throwable|string $description = null)
 * @method ChainAssert allNotMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert allNotMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert allNotNegative(Throwable|string $description = null)
 * @method ChainAssert allNotNfeAccessKey(Throwable|string $description = null)
 * @method ChainAssert allNotNif(Throwable|string $description = null)
 * @method ChainAssert allNotNip(Throwable|string $description = null)
 * @method ChainAssert allNotNo($useLocale = false, Throwable|string $description = null)
 * @method ChainAssert allNotNoWhitespace(Throwable|string $description = null)
 * @method ChainAssert allNotNullType(Throwable|string $description = null)
 * @method ChainAssert allNotNumber(Throwable|string $description = null)
 * @method ChainAssert allNotNumericVal(Throwable|string $description = null)
 * @method ChainAssert allNotObjectType(Throwable|string $description = null)
 * @method ChainAssert allNotOdd(Throwable|string $description = null)
 * @method ChainAssert allNotOptional(Throwable|string $description = null)
 * @method ChainAssert allNotPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert allNotPesel(Throwable|string $description = null)
 * @method ChainAssert allNotPhone(Throwable|string $description = null)
 * @method ChainAssert allNotPhpLabel(Throwable|string $description = null)
 * @method ChainAssert allNotPis(Throwable|string $description = null)
 * @method ChainAssert allNotPolishIdCard(Throwable|string $description = null)
 * @method ChainAssert allNotPositive(Throwable|string $description = null)
 * @method ChainAssert allNotPostalCode(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert allNotPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert allNotPrintable(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotPunct(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotReadable(Throwable|string $description = null)
 * @method ChainAssert allNotRegex(string $regex, Throwable|string $description = null)
 * @method ChainAssert allNotResourceType(Throwable|string $description = null)
 * @method ChainAssert allNotRoman(Throwable|string $description = null)
 * @method ChainAssert allNotScalarVal(Throwable|string $description = null)
 * @method ChainAssert allNotSize(string $minSize = null, string $maxSize = null, Throwable|string $description = null)
 * @method ChainAssert allNotSlug(Throwable|string $description = null)
 * @method ChainAssert allNotSorted(string $direction, Throwable|string $description = null)
 * @method ChainAssert allNotSpace(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotStartsWith($startValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert allNotStringType(Throwable|string $description = null)
 * @method ChainAssert allNotStringVal(Throwable|string $description = null)
 * @method ChainAssert allNotSubdivisionCode(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert allNotSubset(array $superset, Throwable|string $description = null)
 * @method ChainAssert allNotSymbolicLink(Throwable|string $description = null)
 * @method ChainAssert allNotTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert allNotTld(Throwable|string $description = null)
 * @method ChainAssert allNotTrueVal(Throwable|string $description = null)
 * @method ChainAssert allNotType(string $type, Throwable|string $description = null)
 * @method ChainAssert allNotUnique(Throwable|string $description = null)
 * @method ChainAssert allNotUploaded(Throwable|string $description = null)
 * @method ChainAssert allNotUppercase(Throwable|string $description = null)
 * @method ChainAssert allNotUrl(Throwable|string $description = null)
 * @method ChainAssert allNotUuid(int $version = null, Throwable|string $description = null)
 * @method ChainAssert allNotVersion(Throwable|string $description = null)
 * @method ChainAssert allNotVideoUrl(string $service = null, Throwable|string $description = null)
 * @method ChainAssert allNotVowel(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotWritable(Throwable|string $description = null)
 * @method ChainAssert allNotXdigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allNotYes($useLocale = false, Throwable|string $description = null)
 * @method ChainAssert allNullType(Throwable|string $description = null)
 * @method ChainAssert allNumber(Throwable|string $description = null)
 * @method ChainAssert allNumericVal(Throwable|string $description = null)
 * @method ChainAssert allObjectType(Throwable|string $description = null)
 * @method ChainAssert allOdd(Throwable|string $description = null)
 * @method ChainAssert allPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert allPesel(Throwable|string $description = null)
 * @method ChainAssert allPhone(Throwable|string $description = null)
 * @method ChainAssert allPhpLabel(Throwable|string $description = null)
 * @method ChainAssert allPis(Throwable|string $description = null)
 * @method ChainAssert allPolishIdCard(Throwable|string $description = null)
 * @method ChainAssert allPositive(Throwable|string $description = null)
 * @method ChainAssert allPostalCode(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert allPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert allPrintable(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allPunct(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allReadable(Throwable|string $description = null)
 * @method ChainAssert allRegex(string $regex, Throwable|string $description = null)
 * @method ChainAssert allResourceType(Throwable|string $description = null)
 * @method ChainAssert allRoman(Throwable|string $description = null)
 * @method ChainAssert allScalarVal(Throwable|string $description = null)
 * @method ChainAssert allSize(string $minSize = null, string $maxSize = null, Throwable|string $description = null)
 * @method ChainAssert allSlug(Throwable|string $description = null)
 * @method ChainAssert allSorted(string $direction, Throwable|string $description = null)
 * @method ChainAssert allSpace(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allStartsWith($startValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert allStringType(Throwable|string $description = null)
 * @method ChainAssert allStringVal(Throwable|string $description = null)
 * @method ChainAssert allSubdivisionCode(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert allSubset(array $superset, Throwable|string $description = null)
 * @method ChainAssert allSymbolicLink(Throwable|string $description = null)
 * @method ChainAssert allTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert allTld(Throwable|string $description = null)
 * @method ChainAssert allTrueVal(Throwable|string $description = null)
 * @method ChainAssert allType(string $type, Throwable|string $description = null)
 * @method ChainAssert allUnique(Throwable|string $description = null)
 * @method ChainAssert allUploaded(Throwable|string $description = null)
 * @method ChainAssert allUppercase(Throwable|string $description = null)
 * @method ChainAssert allUrl(Throwable|string $description = null)
 * @method ChainAssert allUuid(int $version = null, Throwable|string $description = null)
 * @method ChainAssert allVersion(Throwable|string $description = null)
 * @method ChainAssert allVideoUrl(string $service = null, Throwable|string $description = null)
 * @method ChainAssert allVowel(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allWritable(Throwable|string $description = null)
 * @method ChainAssert allXdigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert allYes($useLocale = false, Throwable|string $description = null)
 * @method ChainAssert alnum(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert alpha(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert arrayType(Throwable|string $description = null)
 * @method ChainAssert arrayVal(Throwable|string $description = null)
 * @method ChainAssert base(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert base64(Throwable|string $description = null)
 * @method ChainAssert between($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert bic(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert boolType(Throwable|string $description = null)
 * @method ChainAssert boolVal(Throwable|string $description = null)
 * @method ChainAssert bsn(Throwable|string $description = null)
 * @method ChainAssert callableType(Throwable|string $description = null)
 * @method ChainAssert callback(callable $callback, Throwable|string $description = null)
 * @method ChainAssert charset(string ...$charset, Throwable|string $description = null)
 * @method ChainAssert cnh(Throwable|string $description = null)
 * @method ChainAssert cnpj(Throwable|string $description = null)
 * @method ChainAssert consonant(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert contains($containsValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert containsAny(array $needles, bool $strictCompareArray = false, Throwable|string $description = null)
 * @method ChainAssert control(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert countable(Throwable|string $description = null)
 * @method ChainAssert countryCode(string $set = null, Throwable|string $description = null)
 * @method ChainAssert cpf(Throwable|string $description = null)
 * @method ChainAssert creditCard(string $brand = null, Throwable|string $description = null)
 * @method ChainAssert currencyCode(Throwable|string $description = null)
 * @method ChainAssert date(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert dateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert digit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert directory(Throwable|string $description = null)
 * @method ChainAssert domain(bool $tldCheck = true, Throwable|string $description = null)
 * @method ChainAssert email(Throwable|string $description = null)
 * @method ChainAssert endsWith($endValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert equals($compareTo, Throwable|string $description = null)
 * @method ChainAssert equivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert even(Throwable|string $description = null)
 * @method ChainAssert executable(Throwable|string $description = null)
 * @method ChainAssert exists(Throwable|string $description = null)
 * @method ChainAssert extension(string $extension, Throwable|string $description = null)
 * @method ChainAssert factor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert falseVal(Throwable|string $description = null)
 * @method ChainAssert fibonacci(Throwable|string $description = null)
 * @method ChainAssert file(Throwable|string $description = null)
 * @method ChainAssert filterVar(int $filter, $options = null, Throwable|string $description = null)
 * @method ChainAssert finite(Throwable|string $description = null)
 * @method ChainAssert floatType(Throwable|string $description = null)
 * @method ChainAssert floatVal(Throwable|string $description = null)
 * @method ChainAssert graph(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert greaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert hexRgbColor(Throwable|string $description = null)
 * @method ChainAssert iban(Throwable|string $description = null)
 * @method ChainAssert identical($value, Throwable|string $description = null)
 * @method ChainAssert image(finfo $fileInfo = null, Throwable|string $description = null)
 * @method ChainAssert imei(Throwable|string $description = null)
 * @method ChainAssert in($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert infinite(Throwable|string $description = null)
 * @method ChainAssert instance(string $instanceName, Throwable|string $description = null)
 * @method ChainAssert intType(Throwable|string $description = null)
 * @method ChainAssert intVal(Throwable|string $description = null)
 * @method ChainAssert ip(string $range = '*', int $options = null, Throwable|string $description = null)
 * @method ChainAssert isbn(Throwable|string $description = null)
 * @method ChainAssert iterableType(Throwable|string $description = null)
 * @method ChainAssert json(Throwable|string $description = null)
 * @method ChainAssert key(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyAlnum(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyAlpha(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyArrayType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyArrayVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyBase(mixed $key, int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert keyBase64(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyBetween(mixed $key, $minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert keyBic(mixed $key, string $countryCode, Throwable|string $description = null)
 * @method ChainAssert keyBoolType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyBoolVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyBsn(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyCallableType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyCallback(mixed $key, callable $callback, Throwable|string $description = null)
 * @method ChainAssert keyCharset(mixed $key, string ...$charset, Throwable|string $description = null)
 * @method ChainAssert keyCnh(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyCnpj(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyConsonant(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyContains(mixed $key, $containsValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert keyContainsAny(mixed $key, array $needles, bool $strictCompareArray = false, Throwable|string $description = null)
 * @method ChainAssert keyControl(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyCountable(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyCountryCode(mixed $key, string $set = null, Throwable|string $description = null)
 * @method ChainAssert keyCpf(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyCreditCard(mixed $key, string $brand = null, Throwable|string $description = null)
 * @method ChainAssert keyCurrencyCode(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyDate(mixed $key, string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert keyDateTime(mixed $key, string $format = null, Throwable|string $description = null)
 * @method ChainAssert keyDigit(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyDirectory(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyDomain(mixed $key, bool $tldCheck = true, Throwable|string $description = null)
 * @method ChainAssert keyEmail(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyEndsWith(mixed $key, $endValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert keyEquals(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyEquivalent(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyEven(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyExecutable(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyExists(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyExtension(mixed $key, string $extension, Throwable|string $description = null)
 * @method ChainAssert keyFactor(mixed $key, int $dividend, Throwable|string $description = null)
 * @method ChainAssert keyFalseVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyFibonacci(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyFile(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyFilterVar(mixed $key, int $filter, $options = null, Throwable|string $description = null)
 * @method ChainAssert keyFinite(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyFloatType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyFloatVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyGraph(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyGreaterThan(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyHexRgbColor(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyIban(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyIdentical(mixed $key, $value, Throwable|string $description = null)
 * @method ChainAssert keyImage(mixed $key, finfo $fileInfo = null, Throwable|string $description = null)
 * @method ChainAssert keyImei(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyIn(mixed $key, $haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert keyInfinite(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyInstance(mixed $key, string $instanceName, Throwable|string $description = null)
 * @method ChainAssert keyIntType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyIntVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyIp(mixed $key, string $range = '*', int $options = null, Throwable|string $description = null)
 * @method ChainAssert keyIsbn(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyIterableType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyJson(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyLanguageCode(mixed $key, string $set = null, Throwable|string $description = null)
 * @method ChainAssert keyLeapDate(mixed $key, string $format, Throwable|string $description = null)
 * @method ChainAssert keyLeapYear(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyLessThan(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyLowercase(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyLuhn(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyMacAddress(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyMaxAge(mixed $key, int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert keyMimetype(mixed $key, string $mimetype, Throwable|string $description = null)
 * @method ChainAssert keyMinAge(mixed $key, int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert keyMultiple(mixed $key, int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert keyNegative(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNfeAccessKey(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNif(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNip(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNo(mixed $key, $useLocale = false, Throwable|string $description = null)
 * @method ChainAssert keyNoWhitespace(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotAlnum(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotAlpha(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotArrayType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotArrayVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotBase(mixed $key, int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert keyNotBase64(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotBetween(mixed $key, $minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert keyNotBic(mixed $key, string $countryCode, Throwable|string $description = null)
 * @method ChainAssert keyNotBlank(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotBoolType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotBoolVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotBsn(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotCallableType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotCallback(mixed $key, callable $callback, Throwable|string $description = null)
 * @method ChainAssert keyNotCharset(mixed $key, string ...$charset, Throwable|string $description = null)
 * @method ChainAssert keyNotCnh(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotCnpj(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotConsonant(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotContains(mixed $key, $containsValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert keyNotContainsAny(mixed $key, array $needles, bool $strictCompareArray = false, Throwable|string $description = null)
 * @method ChainAssert keyNotControl(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotCountable(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotCountryCode(mixed $key, string $set = null, Throwable|string $description = null)
 * @method ChainAssert keyNotCpf(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotCreditCard(mixed $key, string $brand = null, Throwable|string $description = null)
 * @method ChainAssert keyNotCurrencyCode(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotDate(mixed $key, string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert keyNotDateTime(mixed $key, string $format = null, Throwable|string $description = null)
 * @method ChainAssert keyNotDigit(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotDirectory(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotDomain(mixed $key, bool $tldCheck = true, Throwable|string $description = null)
 * @method ChainAssert keyNotEmail(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotEmoji(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotEmpty(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotEndsWith(mixed $key, $endValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert keyNotEquals(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyNotEquivalent(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyNotEven(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotExecutable(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotExists(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotExtension(mixed $key, string $extension, Throwable|string $description = null)
 * @method ChainAssert keyNotFactor(mixed $key, int $dividend, Throwable|string $description = null)
 * @method ChainAssert keyNotFalseVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotFibonacci(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotFile(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotFilterVar(mixed $key, int $filter, $options = null, Throwable|string $description = null)
 * @method ChainAssert keyNotFinite(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotFloatType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotFloatVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotGraph(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotGreaterThan(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyNotHexRgbColor(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotIban(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotIdentical(mixed $key, $value, Throwable|string $description = null)
 * @method ChainAssert keyNotImage(mixed $key, finfo $fileInfo = null, Throwable|string $description = null)
 * @method ChainAssert keyNotImei(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotIn(mixed $key, $haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert keyNotInfinite(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotInstance(mixed $key, string $instanceName, Throwable|string $description = null)
 * @method ChainAssert keyNotIntType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotIntVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotIp(mixed $key, string $range = '*', int $options = null, Throwable|string $description = null)
 * @method ChainAssert keyNotIsbn(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotIterableType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotJson(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotLanguageCode(mixed $key, string $set = null, Throwable|string $description = null)
 * @method ChainAssert keyNotLeapDate(mixed $key, string $format, Throwable|string $description = null)
 * @method ChainAssert keyNotLeapYear(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotLessThan(mixed $key, $compareTo, Throwable|string $description = null)
 * @method ChainAssert keyNotLowercase(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotLuhn(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotMacAddress(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotMaxAge(mixed $key, int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert keyNotMimetype(mixed $key, string $mimetype, Throwable|string $description = null)
 * @method ChainAssert keyNotMinAge(mixed $key, int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert keyNotMultiple(mixed $key, int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert keyNotNegative(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotNfeAccessKey(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotNif(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotNip(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotNo(mixed $key, $useLocale = false, Throwable|string $description = null)
 * @method ChainAssert keyNotNoWhitespace(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotNullType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotNumber(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotNumericVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotObjectType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotOdd(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotOptional(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPerfectSquare(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPesel(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPhone(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPhpLabel(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPis(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPolishIdCard(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPositive(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPostalCode(mixed $key, string $countryCode, Throwable|string $description = null)
 * @method ChainAssert keyNotPresent(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPrimeNumber(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotPrintable(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotPunct(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotReadable(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotRegex(mixed $key, string $regex, Throwable|string $description = null)
 * @method ChainAssert keyNotResourceType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotRoman(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotScalarVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotSize(mixed $key, string $minSize = null, string $maxSize = null, Throwable|string $description = null)
 * @method ChainAssert keyNotSlug(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotSorted(mixed $key, string $direction, Throwable|string $description = null)
 * @method ChainAssert keyNotSpace(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotStartsWith(mixed $key, $startValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert keyNotStringType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotStringVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotSubdivisionCode(mixed $key, string $countryCode, Throwable|string $description = null)
 * @method ChainAssert keyNotSubset(mixed $key, array $superset, Throwable|string $description = null)
 * @method ChainAssert keyNotSymbolicLink(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotTime(mixed $key, string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert keyNotTld(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotTrueVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotType(mixed $key, string $type, Throwable|string $description = null)
 * @method ChainAssert keyNotUnique(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotUploaded(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotUppercase(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotUrl(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotUuid(mixed $key, int $version = null, Throwable|string $description = null)
 * @method ChainAssert keyNotVersion(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotVideoUrl(mixed $key, string $service = null, Throwable|string $description = null)
 * @method ChainAssert keyNotVowel(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotWritable(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNotXdigit(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyNotYes(mixed $key, $useLocale = false, Throwable|string $description = null)
 * @method ChainAssert keyNullType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNumber(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyNumericVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyObjectType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyOdd(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPerfectSquare(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPesel(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPhone(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPhpLabel(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPis(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPolishIdCard(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPositive(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPostalCode(mixed $key, string $countryCode, Throwable|string $description = null)
 * @method ChainAssert keyPresent(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPrimeNumber(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyPrintable(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyPunct(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyReadable(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyRegex(mixed $key, string $regex, Throwable|string $description = null)
 * @method ChainAssert keyResourceType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyRoman(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyScalarVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keySize(mixed $key, string $minSize = null, string $maxSize = null, Throwable|string $description = null)
 * @method ChainAssert keySlug(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keySorted(mixed $key, string $direction, Throwable|string $description = null)
 * @method ChainAssert keySpace(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyStartsWith(mixed $key, $startValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert keyStringType(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyStringVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keySubdivisionCode(mixed $key, string $countryCode, Throwable|string $description = null)
 * @method ChainAssert keySubset(mixed $key, array $superset, Throwable|string $description = null)
 * @method ChainAssert keySymbolicLink(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyTime(mixed $key, string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert keyTld(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyTrueVal(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyType(mixed $key, string $type, Throwable|string $description = null)
 * @method ChainAssert keyUnique(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyUploaded(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyUppercase(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyUrl(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyUuid(mixed $key, int $version = null, Throwable|string $description = null)
 * @method ChainAssert keyVersion(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyVideoUrl(mixed $key, string $service = null, Throwable|string $description = null)
 * @method ChainAssert keyVowel(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyWritable(mixed $key, Throwable|string $description = null)
 * @method ChainAssert keyXdigit(mixed $key, string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert keyYes(mixed $key, $useLocale = false, Throwable|string $description = null)
 * @method ChainAssert languageCode(string $set = null, Throwable|string $description = null)
 * @method ChainAssert leapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert leapYear(Throwable|string $description = null)
 * @method ChainAssert length($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert lengthBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert lengthDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert lengthDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert lengthDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert lengthEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthEven(Throwable|string $description = null)
 * @method ChainAssert lengthFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert lengthFibonacci(Throwable|string $description = null)
 * @method ChainAssert lengthFinite(Throwable|string $description = null)
 * @method ChainAssert lengthFloatType(Throwable|string $description = null)
 * @method ChainAssert lengthFloatVal(Throwable|string $description = null)
 * @method ChainAssert lengthGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthIdentical($value, Throwable|string $description = null)
 * @method ChainAssert lengthIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert lengthInfinite(Throwable|string $description = null)
 * @method ChainAssert lengthIntType(Throwable|string $description = null)
 * @method ChainAssert lengthIntVal(Throwable|string $description = null)
 * @method ChainAssert lengthLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert lengthLeapYear(Throwable|string $description = null)
 * @method ChainAssert lengthLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert lengthMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert lengthMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert lengthNegative(Throwable|string $description = null)
 * @method ChainAssert lengthNot($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthNotBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert lengthNotBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert lengthNotDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert lengthNotDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert lengthNotDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert lengthNotEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthNotEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthNotEven(Throwable|string $description = null)
 * @method ChainAssert lengthNotFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert lengthNotFibonacci(Throwable|string $description = null)
 * @method ChainAssert lengthNotFinite(Throwable|string $description = null)
 * @method ChainAssert lengthNotFloatType(Throwable|string $description = null)
 * @method ChainAssert lengthNotFloatVal(Throwable|string $description = null)
 * @method ChainAssert lengthNotGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthNotIdentical($value, Throwable|string $description = null)
 * @method ChainAssert lengthNotIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert lengthNotInfinite(Throwable|string $description = null)
 * @method ChainAssert lengthNotIntType(Throwable|string $description = null)
 * @method ChainAssert lengthNotIntVal(Throwable|string $description = null)
 * @method ChainAssert lengthNotLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert lengthNotLeapYear(Throwable|string $description = null)
 * @method ChainAssert lengthNotLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert lengthNotMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert lengthNotMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert lengthNotMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert lengthNotNegative(Throwable|string $description = null)
 * @method ChainAssert lengthNotNumber(Throwable|string $description = null)
 * @method ChainAssert lengthNotNumericVal(Throwable|string $description = null)
 * @method ChainAssert lengthNotOdd(Throwable|string $description = null)
 * @method ChainAssert lengthNotPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert lengthNotPositive(Throwable|string $description = null)
 * @method ChainAssert lengthNotPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert lengthNotRoman(Throwable|string $description = null)
 * @method ChainAssert lengthNotStringType(Throwable|string $description = null)
 * @method ChainAssert lengthNotStringVal(Throwable|string $description = null)
 * @method ChainAssert lengthNotTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert lengthNumber(Throwable|string $description = null)
 * @method ChainAssert lengthNumericVal(Throwable|string $description = null)
 * @method ChainAssert lengthOdd(Throwable|string $description = null)
 * @method ChainAssert lengthPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert lengthPositive(Throwable|string $description = null)
 * @method ChainAssert lengthPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert lengthRoman(Throwable|string $description = null)
 * @method ChainAssert lengthStringType(Throwable|string $description = null)
 * @method ChainAssert lengthStringVal(Throwable|string $description = null)
 * @method ChainAssert lengthTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert lessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert lowercase(Throwable|string $description = null)
 * @method ChainAssert luhn(Throwable|string $description = null)
 * @method ChainAssert macAddress(Throwable|string $description = null)
 * @method ChainAssert max($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert maxBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert maxBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert maxDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert maxDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert maxDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert maxEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxEven(Throwable|string $description = null)
 * @method ChainAssert maxFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert maxFibonacci(Throwable|string $description = null)
 * @method ChainAssert maxFinite(Throwable|string $description = null)
 * @method ChainAssert maxFloatType(Throwable|string $description = null)
 * @method ChainAssert maxFloatVal(Throwable|string $description = null)
 * @method ChainAssert maxGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxIdentical($value, Throwable|string $description = null)
 * @method ChainAssert maxIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert maxInfinite(Throwable|string $description = null)
 * @method ChainAssert maxIntType(Throwable|string $description = null)
 * @method ChainAssert maxIntVal(Throwable|string $description = null)
 * @method ChainAssert maxLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert maxLeapYear(Throwable|string $description = null)
 * @method ChainAssert maxLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert maxMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert maxMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert maxNegative(Throwable|string $description = null)
 * @method ChainAssert maxNot($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxNotBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert maxNotBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert maxNotDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert maxNotDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert maxNotDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert maxNotEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxNotEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxNotEven(Throwable|string $description = null)
 * @method ChainAssert maxNotFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert maxNotFibonacci(Throwable|string $description = null)
 * @method ChainAssert maxNotFinite(Throwable|string $description = null)
 * @method ChainAssert maxNotFloatType(Throwable|string $description = null)
 * @method ChainAssert maxNotFloatVal(Throwable|string $description = null)
 * @method ChainAssert maxNotGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxNotIdentical($value, Throwable|string $description = null)
 * @method ChainAssert maxNotIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert maxNotInfinite(Throwable|string $description = null)
 * @method ChainAssert maxNotIntType(Throwable|string $description = null)
 * @method ChainAssert maxNotIntVal(Throwable|string $description = null)
 * @method ChainAssert maxNotLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert maxNotLeapYear(Throwable|string $description = null)
 * @method ChainAssert maxNotLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert maxNotMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert maxNotMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert maxNotMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert maxNotNegative(Throwable|string $description = null)
 * @method ChainAssert maxNotNumber(Throwable|string $description = null)
 * @method ChainAssert maxNotNumericVal(Throwable|string $description = null)
 * @method ChainAssert maxNotOdd(Throwable|string $description = null)
 * @method ChainAssert maxNotPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert maxNotPositive(Throwable|string $description = null)
 * @method ChainAssert maxNotPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert maxNotRoman(Throwable|string $description = null)
 * @method ChainAssert maxNotStringType(Throwable|string $description = null)
 * @method ChainAssert maxNotStringVal(Throwable|string $description = null)
 * @method ChainAssert maxNotTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert maxNumber(Throwable|string $description = null)
 * @method ChainAssert maxNumericVal(Throwable|string $description = null)
 * @method ChainAssert maxOdd(Throwable|string $description = null)
 * @method ChainAssert maxPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert maxPositive(Throwable|string $description = null)
 * @method ChainAssert maxPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert maxRoman(Throwable|string $description = null)
 * @method ChainAssert maxStringType(Throwable|string $description = null)
 * @method ChainAssert maxStringVal(Throwable|string $description = null)
 * @method ChainAssert maxTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert mimetype(string $mimetype, Throwable|string $description = null)
 * @method ChainAssert min($compareTo, Throwable|string $description = null)
 * @method ChainAssert minAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert minBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert minBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert minDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert minDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert minDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert minEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert minEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert minEven(Throwable|string $description = null)
 * @method ChainAssert minFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert minFibonacci(Throwable|string $description = null)
 * @method ChainAssert minFinite(Throwable|string $description = null)
 * @method ChainAssert minFloatType(Throwable|string $description = null)
 * @method ChainAssert minFloatVal(Throwable|string $description = null)
 * @method ChainAssert minGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert minIdentical($value, Throwable|string $description = null)
 * @method ChainAssert minIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert minInfinite(Throwable|string $description = null)
 * @method ChainAssert minIntType(Throwable|string $description = null)
 * @method ChainAssert minIntVal(Throwable|string $description = null)
 * @method ChainAssert minLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert minLeapYear(Throwable|string $description = null)
 * @method ChainAssert minLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert minMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert minMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert minMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert minNegative(Throwable|string $description = null)
 * @method ChainAssert minNot($compareTo, Throwable|string $description = null)
 * @method ChainAssert minNotBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert minNotBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert minNotDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert minNotDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert minNotDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert minNotEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert minNotEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert minNotEven(Throwable|string $description = null)
 * @method ChainAssert minNotFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert minNotFibonacci(Throwable|string $description = null)
 * @method ChainAssert minNotFinite(Throwable|string $description = null)
 * @method ChainAssert minNotFloatType(Throwable|string $description = null)
 * @method ChainAssert minNotFloatVal(Throwable|string $description = null)
 * @method ChainAssert minNotGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert minNotIdentical($value, Throwable|string $description = null)
 * @method ChainAssert minNotIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert minNotInfinite(Throwable|string $description = null)
 * @method ChainAssert minNotIntType(Throwable|string $description = null)
 * @method ChainAssert minNotIntVal(Throwable|string $description = null)
 * @method ChainAssert minNotLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert minNotLeapYear(Throwable|string $description = null)
 * @method ChainAssert minNotLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert minNotMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert minNotMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert minNotMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert minNotNegative(Throwable|string $description = null)
 * @method ChainAssert minNotNumber(Throwable|string $description = null)
 * @method ChainAssert minNotNumericVal(Throwable|string $description = null)
 * @method ChainAssert minNotOdd(Throwable|string $description = null)
 * @method ChainAssert minNotPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert minNotPositive(Throwable|string $description = null)
 * @method ChainAssert minNotPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert minNotRoman(Throwable|string $description = null)
 * @method ChainAssert minNotStringType(Throwable|string $description = null)
 * @method ChainAssert minNotStringVal(Throwable|string $description = null)
 * @method ChainAssert minNotTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert minNumber(Throwable|string $description = null)
 * @method ChainAssert minNumericVal(Throwable|string $description = null)
 * @method ChainAssert minOdd(Throwable|string $description = null)
 * @method ChainAssert minPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert minPositive(Throwable|string $description = null)
 * @method ChainAssert minPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert minRoman(Throwable|string $description = null)
 * @method ChainAssert minStringType(Throwable|string $description = null)
 * @method ChainAssert minStringVal(Throwable|string $description = null)
 * @method ChainAssert minTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert multiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert negative(Throwable|string $description = null)
 * @method ChainAssert nfeAccessKey(Throwable|string $description = null)
 * @method ChainAssert nif(Throwable|string $description = null)
 * @method ChainAssert nip(Throwable|string $description = null)
 * @method ChainAssert no($useLocale = false, Throwable|string $description = null)
 * @method ChainAssert noWhitespace(Throwable|string $description = null)
 * @method ChainAssert notAlnum(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notAlpha(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notArrayType(Throwable|string $description = null)
 * @method ChainAssert notArrayVal(Throwable|string $description = null)
 * @method ChainAssert notBase(int $base, string $chars = null, Throwable|string $description = null)
 * @method ChainAssert notBase64(Throwable|string $description = null)
 * @method ChainAssert notBetween($minimum, $maximum, Throwable|string $description = null)
 * @method ChainAssert notBic(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert notBlank(Throwable|string $description = null)
 * @method ChainAssert notBoolType(Throwable|string $description = null)
 * @method ChainAssert notBoolVal(Throwable|string $description = null)
 * @method ChainAssert notBsn(Throwable|string $description = null)
 * @method ChainAssert notCallableType(Throwable|string $description = null)
 * @method ChainAssert notCallback(callable $callback, Throwable|string $description = null)
 * @method ChainAssert notCharset(string ...$charset, Throwable|string $description = null)
 * @method ChainAssert notCnh(Throwable|string $description = null)
 * @method ChainAssert notCnpj(Throwable|string $description = null)
 * @method ChainAssert notConsonant(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notContains($containsValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert notContainsAny(array $needles, bool $strictCompareArray = false, Throwable|string $description = null)
 * @method ChainAssert notControl(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notCountable(Throwable|string $description = null)
 * @method ChainAssert notCountryCode(string $set = null, Throwable|string $description = null)
 * @method ChainAssert notCpf(Throwable|string $description = null)
 * @method ChainAssert notCreditCard(string $brand = null, Throwable|string $description = null)
 * @method ChainAssert notCurrencyCode(Throwable|string $description = null)
 * @method ChainAssert notDate(string $format = 'Y-m-d', Throwable|string $description = null)
 * @method ChainAssert notDateTime(string $format = null, Throwable|string $description = null)
 * @method ChainAssert notDigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notDirectory(Throwable|string $description = null)
 * @method ChainAssert notDomain(bool $tldCheck = true, Throwable|string $description = null)
 * @method ChainAssert notEmail(Throwable|string $description = null)
 * @method ChainAssert notEmoji(Throwable|string $description = null)
 * @method ChainAssert notEmpty(Throwable|string $description = null)
 * @method ChainAssert notEndsWith($endValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert notEquals($compareTo, Throwable|string $description = null)
 * @method ChainAssert notEquivalent($compareTo, Throwable|string $description = null)
 * @method ChainAssert notEven(Throwable|string $description = null)
 * @method ChainAssert notExecutable(Throwable|string $description = null)
 * @method ChainAssert notExists(Throwable|string $description = null)
 * @method ChainAssert notExtension(string $extension, Throwable|string $description = null)
 * @method ChainAssert notFactor(int $dividend, Throwable|string $description = null)
 * @method ChainAssert notFalseVal(Throwable|string $description = null)
 * @method ChainAssert notFibonacci(Throwable|string $description = null)
 * @method ChainAssert notFile(Throwable|string $description = null)
 * @method ChainAssert notFilterVar(int $filter, $options = null, Throwable|string $description = null)
 * @method ChainAssert notFinite(Throwable|string $description = null)
 * @method ChainAssert notFloatType(Throwable|string $description = null)
 * @method ChainAssert notFloatVal(Throwable|string $description = null)
 * @method ChainAssert notGraph(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notGreaterThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert notHexRgbColor(Throwable|string $description = null)
 * @method ChainAssert notIban(Throwable|string $description = null)
 * @method ChainAssert notIdentical($value, Throwable|string $description = null)
 * @method ChainAssert notImage(finfo $fileInfo = null, Throwable|string $description = null)
 * @method ChainAssert notImei(Throwable|string $description = null)
 * @method ChainAssert notIn($haystack, bool $compareIdentical = false, Throwable|string $description = null)
 * @method ChainAssert notInfinite(Throwable|string $description = null)
 * @method ChainAssert notInstance(string $instanceName, Throwable|string $description = null)
 * @method ChainAssert notIntType(Throwable|string $description = null)
 * @method ChainAssert notIntVal(Throwable|string $description = null)
 * @method ChainAssert notIp(string $range = '*', int $options = null, Throwable|string $description = null)
 * @method ChainAssert notIsbn(Throwable|string $description = null)
 * @method ChainAssert notIterableType(Throwable|string $description = null)
 * @method ChainAssert notJson(Throwable|string $description = null)
 * @method ChainAssert notLanguageCode(string $set = null, Throwable|string $description = null)
 * @method ChainAssert notLeapDate(string $format, Throwable|string $description = null)
 * @method ChainAssert notLeapYear(Throwable|string $description = null)
 * @method ChainAssert notLessThan($compareTo, Throwable|string $description = null)
 * @method ChainAssert notLowercase(Throwable|string $description = null)
 * @method ChainAssert notLuhn(Throwable|string $description = null)
 * @method ChainAssert notMacAddress(Throwable|string $description = null)
 * @method ChainAssert notMaxAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert notMimetype(string $mimetype, Throwable|string $description = null)
 * @method ChainAssert notMinAge(int $age, string $format = null, Throwable|string $description = null)
 * @method ChainAssert notMultiple(int $multipleOf, Throwable|string $description = null)
 * @method ChainAssert notNegative(Throwable|string $description = null)
 * @method ChainAssert notNfeAccessKey(Throwable|string $description = null)
 * @method ChainAssert notNif(Throwable|string $description = null)
 * @method ChainAssert notNip(Throwable|string $description = null)
 * @method ChainAssert notNo($useLocale = false, Throwable|string $description = null)
 * @method ChainAssert notNoWhitespace(Throwable|string $description = null)
 * @method ChainAssert notNullType(Throwable|string $description = null)
 * @method ChainAssert notNumber(Throwable|string $description = null)
 * @method ChainAssert notNumericVal(Throwable|string $description = null)
 * @method ChainAssert notObjectType(Throwable|string $description = null)
 * @method ChainAssert notOdd(Throwable|string $description = null)
 * @method ChainAssert notOptional(Throwable|string $description = null)
 * @method ChainAssert notPerfectSquare(Throwable|string $description = null)
 * @method ChainAssert notPesel(Throwable|string $description = null)
 * @method ChainAssert notPhone(Throwable|string $description = null)
 * @method ChainAssert notPhpLabel(Throwable|string $description = null)
 * @method ChainAssert notPis(Throwable|string $description = null)
 * @method ChainAssert notPolishIdCard(Throwable|string $description = null)
 * @method ChainAssert notPositive(Throwable|string $description = null)
 * @method ChainAssert notPostalCode(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert notPrimeNumber(Throwable|string $description = null)
 * @method ChainAssert notPrintable(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notPunct(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notReadable(Throwable|string $description = null)
 * @method ChainAssert notRegex(string $regex, Throwable|string $description = null)
 * @method ChainAssert notResourceType(Throwable|string $description = null)
 * @method ChainAssert notRoman(Throwable|string $description = null)
 * @method ChainAssert notScalarVal(Throwable|string $description = null)
 * @method ChainAssert notSize(string $minSize = null, string $maxSize = null, Throwable|string $description = null)
 * @method ChainAssert notSlug(Throwable|string $description = null)
 * @method ChainAssert notSorted(string $direction, Throwable|string $description = null)
 * @method ChainAssert notSpace(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notStartsWith($startValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert notStringType(Throwable|string $description = null)
 * @method ChainAssert notStringVal(Throwable|string $description = null)
 * @method ChainAssert notSubdivisionCode(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert notSubset(array $superset, Throwable|string $description = null)
 * @method ChainAssert notSymbolicLink(Throwable|string $description = null)
 * @method ChainAssert notTime(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert notTld(Throwable|string $description = null)
 * @method ChainAssert notTrueVal(Throwable|string $description = null)
 * @method ChainAssert notType(string $type, Throwable|string $description = null)
 * @method ChainAssert notUnique(Throwable|string $description = null)
 * @method ChainAssert notUploaded(Throwable|string $description = null)
 * @method ChainAssert notUppercase(Throwable|string $description = null)
 * @method ChainAssert notUrl(Throwable|string $description = null)
 * @method ChainAssert notUuid(int $version = null, Throwable|string $description = null)
 * @method ChainAssert notVersion(Throwable|string $description = null)
 * @method ChainAssert notVideoUrl(string $service = null, Throwable|string $description = null)
 * @method ChainAssert notVowel(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notWritable(Throwable|string $description = null)
 * @method ChainAssert notXdigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert notYes($useLocale = false, Throwable|string $description = null)
 * @method ChainAssert nullType(Throwable|string $description = null)
 * @method ChainAssert number(Throwable|string $description = null)
 * @method ChainAssert numericVal(Throwable|string $description = null)
 * @method ChainAssert objectType(Throwable|string $description = null)
 * @method ChainAssert odd(Throwable|string $description = null)
 * @method ChainAssert perfectSquare(Throwable|string $description = null)
 * @method ChainAssert pesel(Throwable|string $description = null)
 * @method ChainAssert phone(Throwable|string $description = null)
 * @method ChainAssert phpLabel(Throwable|string $description = null)
 * @method ChainAssert pis(Throwable|string $description = null)
 * @method ChainAssert polishIdCard(Throwable|string $description = null)
 * @method ChainAssert positive(Throwable|string $description = null)
 * @method ChainAssert postalCode(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert primeNumber(Throwable|string $description = null)
 * @method ChainAssert printable(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert punct(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert readable(Throwable|string $description = null)
 * @method ChainAssert regex(string $regex, Throwable|string $description = null)
 * @method ChainAssert resourceType(Throwable|string $description = null)
 * @method ChainAssert roman(Throwable|string $description = null)
 * @method ChainAssert scalarVal(Throwable|string $description = null)
 * @method ChainAssert size(string $minSize = null, string $maxSize = null, Throwable|string $description = null)
 * @method ChainAssert slug(Throwable|string $description = null)
 * @method ChainAssert sorted(string $direction, Throwable|string $description = null)
 * @method ChainAssert space(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert startsWith($startValue, bool $identical = false, Throwable|string $description = null)
 * @method ChainAssert stringType(Throwable|string $description = null)
 * @method ChainAssert stringVal(Throwable|string $description = null)
 * @method ChainAssert subdivisionCode(string $countryCode, Throwable|string $description = null)
 * @method ChainAssert subset(array $superset, Throwable|string $description = null)
 * @method ChainAssert symbolicLink(Throwable|string $description = null)
 * @method ChainAssert time(string $format = 'H:i:s', Throwable|string $description = null)
 * @method ChainAssert tld(Throwable|string $description = null)
 * @method ChainAssert trueVal(Throwable|string $description = null)
 * @method ChainAssert type(string $type, Throwable|string $description = null)
 * @method ChainAssert unique(Throwable|string $description = null)
 * @method ChainAssert uploaded(Throwable|string $description = null)
 * @method ChainAssert uppercase(Throwable|string $description = null)
 * @method ChainAssert url(Throwable|string $description = null)
 * @method ChainAssert uuid(int $version = null, Throwable|string $description = null)
 * @method ChainAssert version(Throwable|string $description = null)
 * @method ChainAssert videoUrl(string $service = null, Throwable|string $description = null)
 * @method ChainAssert vowel(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert writable(Throwable|string $description = null)
 * @method ChainAssert xdigit(string ...$additionalChars, Throwable|string $description = null)
 * @method ChainAssert yes($useLocale = false, Throwable|string $description = null)
 * phpcs:enable Generic.Files.LineLength
 */
final class ChainAssert
{
    /**
     * @var mixed
     */
    private $input;

    /**
     * @param mixed $input
     */
    public function __construct($input)
    {
        $this->input = $input;
    }

    /**
     * @param array<mixed> $arguments
     */
    public function __call(string $name, array $arguments): self
    {
        array_unshift($arguments, $this->input);

        Assert::__callStatic($name, $arguments);

        return $this;
    }
}
